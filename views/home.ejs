<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <title>Random Title</title>
   <style>
      .album {
         aspect-ratio: 1.0;
         width: 128px;
      }
   </style>
</head>
   <body>
      <p>Track info:</p>
      <input id="track-title" type="text" placeholder="title"/>
      <span> by </span>
      <input id="track-artist" type="text" placeholder="artist" />
      <br />
      <p>Upload track:</p>
      <input id="track-upload" type="file" accept=".mp3,.wav" />
      <br />
      <p>Upload album cover:</p>
      <input id="track-album" type="file" accept=".png,.jpeg,.jpg,.gif,.bmp,.tiff,.webp" />
      <br />
      <button onclick="upload()" id="upload-button">Upload</button>
      <button id="event-button">New Event</button>

      <hr />

      <% for (let i = 0; i < events.length; i++) { %>
         <h2><%= events[i].title %></h2>
         <p><%= events[i].date %></p>
         <p><%= events[i].desc %></p>
         <% for (let j = 0; j < events[i].tracks.length; j++) { %>
            <% let track = events[i].tracks[j] %>
            <img class="album" src="<%= track.album %>" />
            <p><%= track.artist %> - <%= track.title %></p>
            <audio controls>
               <source src="<%= track.url %>">
            </audio>
         <% } %>
      <% } %>
   <script>

   const compress_image = (file, dim, quality) => {
      return new Promise((resolve, reject) => {
         const reader = new FileReader()
         reader.onload = (e) => {
            const img = new Image()
               
            img.onload = () => {
                const canvas = document.createElement('canvas')
                let width = img.width
                let height = img.height
                
                if (width > height) {
                    if (width > dim) {
                        height *= dim / width
                        width = dim
                    }
                } else {
                    if (height > dim) {
                        width *= dim / height
                        height = dim
                    }
                }
                
                canvas.width = dim
                canvas.height = dim
                const ctx = canvas.getContext('2d')
                ctx.imageSmoothingEnabled = true;
                ctx.drawImage(img, 0, 0, dim, dim)
                
                canvas.toBlob(blob => {
                    const compressedFile = new File([blob], file.name.replace(/\.[^/.]+$/, "") + '.webp', { type: 'image/webp' });
                    resolve(compressedFile);
                }, 'image/webp', quality)
            }
            
            img.src = e.target.result;
         }
           
         reader.onerror = (error) => {
            reject(error);
         }
        
         reader.readAsDataURL(file);
      })
   }

   const newevent = () => {
      fetch("http://localhost:8080/eventcreate", {
         method: "post",
         headers: {
            "Content-Type": "application/json"
         },
         body: JSON.stringify({
            id: "testid",
            name: "test event",
            desc: "An event devoted to testing"
         })
      })
   }

   const upload = async () => {
      console.log("Attempting upload")
      const trackinput = document.querySelector("#track-upload")
      const albuminput = document.querySelector("#track-album")

      if (trackinput.files.length == 0) {
         return alert("Select a file to upload")
      }

      console.log("Loading & compressing files")
      let url = "http://localhost:8080/upload"
      let formdata = new FormData()
      let track = trackinput.files[0]
      let album = albuminput.files.length != 0 ? await compress_image(albuminput.files[0], 256, 0.5) : undefined

      if (album) console.log(`Compressed album from ${albuminput.files[0].size}kb to ${album.size}kb.`)

      formdata.append("track", track)
      if (album) formdata.append("album", album)
      formdata.append("title", document.querySelector("#track-title").value)
      formdata.append("artist", document.querySelector("#track-artist").value)

      console.log("Submitting files")
      try {
         let res = await fetch(url, {
            method: "POST",
            body: formdata
         })

         if (res.status == 200) {
            alert("Successfully uploaded!")
         } else {
            throw res.statusText
         }
      } catch (e) {
         alert("Error: " + e)
      }

   }
   </script>
   </body>
</html>

